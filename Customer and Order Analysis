This project utilizes multiple tables to get metrics for customers and orders. 


SELECT * FROM BIT_DB.customers;
-- columns in the customer table: order_id, acctnum
SELECT * FROM BIT_DB.JanSales;
--  columns in the JanSales table: order_id, product, quantity, price, orderdate, location

-- 1. How many orders were placed in January?

SELECT COUNT(orderID) AS total_orders
FROM JanSales
WHERE length(orderID) = 6
AND orderID <> 'orderID'; 

--2. How many Iphone were sold in January?

SELECT COUNT(product) AS number_of_Iphones_sold
FROM BIT_DB.JanSales
WHERE Product = 'Iphone' 
AND length(orderid) = 6 
AND orderid <> 'OrderID';

-- 3. Select the customer account numbers for all the orders that were placed in February.

SELECT acctnum
FROM BIT_DB.customers
INNER JOIN BIT_DB.FebSales
ON BIT_DB.customers.order_id = BIT_DB.FebSales.orderID
WHERE length(orderid) = 6
AND orderid <> 'OrderID'
;  

-- 4. Which product was the cheapest one sold in January, and what was the price?

SELECT DISTINCT product, MIN(price) AS price
FROM BIT_DB.JanSales
GROUP BY product, price
ORDER BY price asc
LIMIT 1
;

-- 5. What is the total revenue for each product sold in January?

SELECT product, ROUND(SUM(price),1*quantity) AS revenue
FROM BIT_DB.JanSales
WHERE length(orderid) = 6
AND orderid <> 'OrderID'
GROUP BY product;

-- 6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?

SELECT product, SUM(quantity) AS pquantity, location, SUM(quantity)*price AS revenue
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY product;

-- 7. How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?

SELECT COUNT(DISTINCT cust.acctnum) AS customers, ROUND(AVG(quantity)*price,1) AS avg_amount_spent
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON Feb.orderID = cust.order_id
WHERE Feb.quantity > 2
AND length(orderid) = 6
AND orderid <> 'OrderID';
